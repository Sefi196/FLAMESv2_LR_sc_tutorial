[["exploring-isoforms-of-interest.html", "Chapter 6 Exploring isoforms of interest 6.1 Isoforms expressed per gene 6.2 Top 10 Genes with Most Isoforms 6.3 Exploring MACF1 isoforms 6.4 Expression of MCAF1 isoforms Across Cell Types 6.5 Visualization of Isoform Structures", " Chapter 6 Exploring isoforms of interest One of the most powerful aspects of long-read single-cell sequencing is its ability to profile isoform-specific information at single-cell resolution. This capability opens up numerous avenues for analysis. In our lab we are interested in exploring the role of RNA isofroms in neuronal differentiation. There are many examples in the literate of isofroms regurgitating this process. We will cover some very general analysis with this focus in mind. For users of long-read single-cell tools who are interested in exploring additional biological questions, we encourage you to share your suggestions and we can expand this section to include analytical approaches that may cover a wider range of applications. 6.1 Isoforms expressed per gene With long-read single-cell data, we have the ability to analyze all the isoforms expressed by a given gene. In our data we can see that most genes express more than one isoform. Code #lets aggeragte the expresstion data by cell type counts &lt;- AggregateExpression( seu_obj, assays = &quot;iso&quot;, return.seurat = FALSE, group.by = &quot;sctype_db&quot; ) as.data.frame(counts) -&gt; df row.names(df) -&gt; df$gene #split transcript ids into gene and transcript id df &lt;- df %&gt;% separate(gene, into = c(&quot;transcript_id&quot;, &quot;gene_id&quot;), sep = &quot;-&quot;, extra = &quot;merge&quot;) #df$transcript_id &lt;- sub(&quot;\\\\..*&quot;, &quot;&quot;, df$transcript_id) # 2. Count the number of isoforms per gene isoform_count_per_gene &lt;- df %&gt;% group_by(gene_id) %&gt;% summarise(n_isoforms = n_distinct(transcript_id)) # 3. count isforms per category isoform_count_per_gene &lt;- isoform_count_per_gene %&gt;% mutate(isoform_category = case_when( n_isoforms == 1 ~ &quot;1&quot;, n_isoforms &gt;= 2 &amp; n_isoforms &lt;= 3 ~ &quot;2-3&quot;, n_isoforms &gt;= 4 &amp; n_isoforms &lt;= 5 ~ &quot;4-5&quot;, n_isoforms &gt;= 6 ~ &quot;6+&quot; )) # 4. Calculate the percentage of genes in each bin isoform_count_summary &lt;- isoform_count_per_gene %&gt;% count(isoform_category) %&gt;% mutate(percent = (n / sum(n)) * 100) ggplot(isoform_count_summary, aes(x = isoform_category, y = percent)) + geom_bar(stat = &quot;identity&quot;, fill = &quot;lightblue&quot;, color = &quot;black&quot;) + labs(title = &quot;Number of Isoforms per Gene&quot;, x = &quot;Isoforms per Gene&quot;, y = &quot;Genes, %&quot;) + theme_minimal() + theme(legend.position = &quot;none&quot;, plot.title = element_text(hjust = 0.5)) 6.2 Top 10 Genes with Most Isoforms We can see that about 45% of genes express a single isoform, however there are some genes like MIR9-1HG that have alot of unique isofroms, 97 in fact. The top 10 genes with the most isofroms are listed bellow. Code # Genes ranked by the number of transcript isoforms detected across all samples gene_transcript_counts &lt;- df %&gt;% group_by(gene_id) %&gt;% summarise(unique_transcripts = n_distinct(transcript_id)) %&gt;% arrange(desc(unique_transcripts)) # Select the top 10 genes based on unique transcript counts top10 &lt;- gene_transcript_counts %&gt;% top_n(10, unique_transcripts) top10 ## # A tibble: 10 × 2 ## gene_id unique_transcripts ## &lt;chr&gt; &lt;int&gt; ## 1 MIR9-1HG 97 ## 2 GAS5 69 ## 3 NUTM2A-AS1 50 ## 4 SNHG1 50 ## 5 FRG1HP 43 ## 6 TMEM161B-DT 43 ## 7 SNHG29 42 ## 8 ENSG00000300022 41 ## 9 FAM66A 39 ## 10 SNHG14 38 We can also plot unique transcripts per gene on a log scale showing that the number of isofroms per gene varies alot across out data. Code # Plot ranked genes by unique &quot;BambuTx&quot; transcript count ggplot(gene_transcript_counts, aes(x = rank(desc(unique_transcripts)), y = unique_transcripts)) + geom_point(color = &quot;darkblue&quot;, size = 1) + # Points for each gene # Log scale for both axes scale_x_log10() + scale_y_log10() + # Title and labels labs( title = &quot;Unique Transcripts per Gene&quot;, x = &quot;Rank (log scale)&quot;, y = &quot;# Transcripts (log scale)&quot; ) + # Highlight and label the top 10 genes with gray background and black border around the text geom_label_repel( data = gene_transcript_counts %&gt;% filter(gene_id %in% top10$gene_id), aes(label = gene_id), fill = &quot;gray&quot;, # Gray background for the label color = &quot;black&quot;, # Black text color label.size = 0.25, # Border thickness around the label label.r = unit(0.15, &quot;lines&quot;), # Border radius (rounded corners) size = 3, box.padding = 0.2, max.overlaps = 14 ) + # Minimal theme and additional styling theme_minimal() + theme( plot.title = element_text(size = 14, face = &quot;bold&quot;, hjust = 0.5), # Centered title axis.text = element_text(size = 10, color = &quot;black&quot;), # Black axis tick labels axis.title = element_text(color = &quot;black&quot;), # Black axis titles panel.grid.minor = element_blank(), panel.border = element_rect(color = &quot;black&quot;, fill = NA, linewidth = 1) # Black border around the graph ) 6.3 Exploring MACF1 isoforms We are interested in isoforms that regulate neuronal differentiation, we can look at some genes of interest. Lets look at gene MACF1. This gene is know to…. [ref]. The gene seems to play some important role in neural migration which is not fully understood yet. First lets try and visualize the expression of these isofroms on a UMAP to see if we can uncover anything interesting. MACF1 has 35 expressed isofroms so lets only plot the top 12 most highly expressed. Code features &lt;- rownames(filt_seurat_object@assays$iso@features) # Define the gene of interest gene &lt;- &quot;MACF1&quot; # Access the data matrix for the &#39;iso&#39; assay expression_matrix &lt;- GetAssayData(filt_seurat_object, assay = &quot;iso&quot;, slot = &quot;data&quot;) # Filter features containing the gene name matching_features &lt;- grep(paste0(&quot;(^|-|\\\\b)&quot;, gene, &quot;($|\\\\b)&quot;), rownames(expression_matrix), value = TRUE) # Subset the expression matrix to include only the matching features subset_expression &lt;- expression_matrix[matching_features, , drop = FALSE] # Calculate the total expression for each matching feature total_expression &lt;- Matrix::rowSums(subset_expression) # Rank features by average expression top_features &lt;- names(sort(total_expression, decreasing = TRUE)) # Print the ranked features (optional) print(data.frame(Feature = top_features, AvgExpression = total_expression[top_features])) ## Feature AvgExpressionode # Plot the top 16 features in descending order of their average expression FeaturePlot( filt_seurat_object, features = head(top_features, 12), reduction = &quot;umap&quot;, order = TRUE # Ensures higher-expressing cells are plotted on top ) 6.4 Expression of MCAF1 isoforms Across Cell Types Lets look at isofroms ENST00000564288.6 ENST00000361689.7 , ENST00000289893.8 and ENST00000524432.5 in some more detail and plot the normalized expression of these isoforms across each cell type. We can see that the expression of ENST00000524432.5shows a cell type specific profile. Code features_MACF1 &lt;- c(&quot;ENST00000564288.6-MACF1&quot;, # cononical &quot;ENST00000361689.7-MACF1&quot;, # most cell types &quot;ENST00000289893.8-MACF1&quot;, # msot cell types &quot;ENST00000524432.5-MACF1&quot;) # radial glia VlnPlot(seu_obj, features = features_MACF1) lets look at our DE results comparing Glutamatergic neurons and Radial glia cells that we calcualted in the previous chapter and filter for significant MCAF1 isoforms. If we plot these features on a Volcano plotwe see isoform ENST00000524432.5 is enriched in radial glia cells. In fact its enrichment compared to Glutamatergic neurons is pretty high with a Log2fold change of 4.16. Code glu_RG_iso %&gt;% rownames_to_column(&quot;isoform&quot;) %&gt;% filter(grepl(&quot;MACF1&quot;, isoform)) %&gt;% filter(p_val_adj &lt; 0.5) ## isoform p_val avg_log2FC pct.1 pct.2 p_val_adj ## 1 ENST00000524432.5-MACF1 1.025842e-10 -4.163237 0.011 0.384 6.539231e-06 Code EnhancedVolcano(glu_RG_iso, lab=rownames(glu_RG_iso), x=&#39;avg_log2FC&#39;, y=&#39;p_val_adj&#39;, #selectLab= &quot;VIM&quot;, pCutoff=0.05, FCcutoff=2, selectLab = &quot;ENST00000524432.5-MACF1&quot;, boxedLabels = TRUE, drawConnectors = TRUE, title = &quot;Volcano Plot showing ENST00000524432.5-MACF1 isoforms \\n Glutamatergic Neurons vs Radial glial Cells&quot;) 6.5 Visualization of Isoform Structures Now that we know these isoforms expresstion is significantly different in these two cell popualtions it may be of interest to visualte the isofrom structures. This analysis will help us explore the simailrties and differnces between our isoforms of interest. There are many visualtion options avaliable to us and many of these are available in R. In fact FLAMES has its own visualization function FLAMES::plot_isoform_reduced_dim . This function is designed to work on single cell experiment object and not Seurat object. Although it is possible to switch between these formats, for the purpose of this tutorial we want to keep file conversations to a minimum to keep the analysis simple. We instead recommend using IsoViz (Wan et al., 2024), which was developed in the Clark Lab. The tool is a web application specifically designed for visualizing isoform structures. This visualization can provide valuable insights into the potential functions of different isoforms. First lets prepare the count data that we will load into Isoviz1 Code #extract some isoform expression data to visualize in isoviz #use pseudobulk counts we from above row.names(df) &lt;- NULL df$gene_id &lt;- NULL write.csv(df, &quot;output_files/psedubulk_exp.csv&quot;, row.names = FALSE) To use IsoViz click on the following link https://isomix.org/isovis/ and uplaod the isofrom_annotated.gtf file located in the FLAMES output dir and psedubulk_exp.csv genrated above For more detail on how to use Isoviz click the ‘IsoViz tutorial’ button or read the publication. Embedded bellow is the figure generated by Isoviz. When Viewing this data in the web broswer users will have more fucntionalty. (eg looking a tprotein domins or clicking on ENST ids and being linked to ensble). Here we and visualizing our 4 isofroms of interest. We can see MCAF1 is a very complex gene with many exons, a variety of alternative transcription start sites and ORFs. Our pseudobulk expression analysis clearly demonstrates that ENST00000524432.5 is predominantly expressed in radial glia cells. This isoform is particularly interesting, as it is significantly shorter than others and lacks many of the protein domains present in ENST00000564288.6, the canonical isoform. Notably, all four isoforms exhibit different transcription start sites (TSS), suggesting that TSS variation may be linked to cell-type-specific expression or distinct protein functions. Additionally, ENST00000289893.8 shows comparably high expression levels across most cell types. However, a deeper exploration of this isoform reveals that it does not produce a functional protein. This is evident from examining the Ensembl data, accessible via the hyperlink, where we can see that no open reading frames (ORFs) are associated with this transcript. Code knitr::include_graphics(&quot;images/IsoVis_ENSG00000127603.png&quot;) Figure 6.1: IsoViz visualization of 4 MACF1 isoforms. Structural visualization aids in identifying critical variations such as alternative splicing events, unique protein-coding regions, and functional domains and severs as a powerful tool to infer isoform function. There are lots of additional analysis that could be performed to further explore the function of our MCAF1 isofroms, these include domain enrichment analysis and protein folding to name a few. Idea to add Splice Variant Impact Analyze how alternative splicing affects protein structure and function using tools like PROSITE or structural prediction algorithms. References Wan, C. Y., Davis, J., Chauhan, M., Gleeson, J., Prawer, Y. J., De Paoli-Iseppi, R., Wells, C., Choi, J., &amp; Clark, M. (2024). IsoVis a webserver for visualization and annotation of alternative RNA isoforms. Nucleic Acids Research, 52(W1), W341–W347. https://doi.org/10.1093/nar/gkae343 Please be careful when interpretting psedubolk expresstion data. Although the data can give you some indication of reletevie expresstion across cell types , this numbers can be affected by the number of cells in each cluster.↩︎ "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
