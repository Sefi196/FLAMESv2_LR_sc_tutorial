[["finding-differentially-expressed-genes-and-isoforms.html", "Chapter 5 Finding differentially expressed genes and isoforms 5.1 Differentially expressed genes by cluster identity 5.2 Identifying cell types 5.3 plotting trajectories 5.4 5.5 Finding isofrms of interest 5.6 5.7 plotting with ditoplot", " Chapter 5 Finding differentially expressed genes and isoforms 5.1 Differentially expressed genes by cluster identity first we will look at marker genes for each cluster. This will help us identify which genes are DE in each cluster and indicate which cell type each cluster belongs to. We will also look at DE isoforms using the same methodology #Find markers for all clusters using the &quot;RNA&quot; and &quot;iso&quot; assay all_markers_gene &lt;- FindAllMarkers(seu_obj, assay = &quot;RNA&quot;, do.print = TRUE, logfc.threshold = 0.5, min.pct = 0.20, only.pos = TRUE) %&gt;% dplyr::filter(p_val_adj &lt; 0.05) all_markers_iso &lt;- FindAllMarkers(seu_obj, assay = &quot;iso&quot;, do.print = TRUE, logfc.threshold = 0.5, min.pct = 0.20, only.pos = TRUE) %&gt;% dplyr::filter(p_val_adj &lt; 0.05) #save the list of DE genes write.csv(all_markers_gene, &quot;./output_files/DE/all_markers_one_gene.csv&quot;) write.csv(all_markers_iso, &quot;./output_files/DE/all_markers_one_iso.csv&quot;) #notes - could add other DE options maybe add this later 5.2 Identifying cell types Based on these differentially expressed (DE) genes, we can identify the cell types present in our sample. This process is often complex and requires prior knowledge of cell markers as well as an understanding of the cell types expected in the sample. An alternative approach is to use automated cell type identification tools. In this tutorial, we will use scType [ref]. However, it is important to note that the accuracy of automated tools varies and depends heavily on the reference database they utilize. Therefore, it is recommended to use a combination of methods to cross-validate cell type identification and ensure robust results. # load libraries from sctype lapply(c(&quot;ggraph&quot;,&quot;igraph&quot;,&quot;tidyverse&quot;, &quot;data.tree&quot;), library, character.only = T) ## [[1]] ## [1] &quot;HGNChelper&quot; &quot;data.tree&quot; &quot;igraph&quot; &quot;ggraph&quot; ## [5] &quot;ROCR&quot; &quot;KernSmooth&quot; &quot;parallel&quot; &quot;fields&quot; ## [9] &quot;viridisLite&quot; &quot;spam&quot; &quot;lubridate&quot; &quot;forcats&quot; ## [13] &quot;dplyr&quot; &quot;purrr&quot; &quot;readr&quot; &quot;tidyr&quot; ## [17] &quot;tibble&quot; &quot;ggplot2&quot; &quot;tidyverse&quot; &quot;patchwork&quot; ## [21] &quot;grid&quot; &quot;cowplot&quot; &quot;stringr&quot; &quot;DoubletFinder&quot; ## [25] &quot;celda&quot; &quot;Matrix&quot; &quot;BiocParallel&quot; &quot;data.table&quot; ## [29] &quot;gridExtra&quot; &quot;DropletUtils&quot; &quot;SingleCellExperiment&quot; &quot;SummarizedExperiment&quot; ## [33] &quot;Biobase&quot; &quot;MatrixGenerics&quot; &quot;matrixStats&quot; &quot;Seurat&quot; ## [37] &quot;SeuratObject&quot; &quot;sp&quot; &quot;rtracklayer&quot; &quot;GenomicRanges&quot; ## [41] &quot;GenomeInfoDb&quot; &quot;IRanges&quot; &quot;S4Vectors&quot; &quot;BiocGenerics&quot; ## [45] &quot;stats4&quot; &quot;stats&quot; &quot;graphics&quot; &quot;grDevices&quot; ## [49] &quot;utils&quot; &quot;datasets&quot; &quot;methods&quot; &quot;base&quot; ## ## [[2]] ## [1] &quot;HGNChelper&quot; &quot;data.tree&quot; &quot;igraph&quot; &quot;ggraph&quot; ## [5] &quot;ROCR&quot; &quot;KernSmooth&quot; &quot;parallel&quot; &quot;fields&quot; ## [9] &quot;viridisLite&quot; &quot;spam&quot; &quot;lubridate&quot; &quot;forcats&quot; ## [13] &quot;dplyr&quot; &quot;purrr&quot; &quot;readr&quot; &quot;tidyr&quot; ## [17] &quot;tibble&quot; &quot;ggplot2&quot; &quot;tidyverse&quot; &quot;patchwork&quot; ## [21] &quot;grid&quot; &quot;cowplot&quot; &quot;stringr&quot; &quot;DoubletFinder&quot; ## [25] &quot;celda&quot; &quot;Matrix&quot; &quot;BiocParallel&quot; &quot;data.table&quot; ## [29] &quot;gridExtra&quot; &quot;DropletUtils&quot; &quot;SingleCellExperiment&quot; &quot;SummarizedExperiment&quot; ## [33] &quot;Biobase&quot; &quot;MatrixGenerics&quot; &quot;matrixStats&quot; &quot;Seurat&quot; ## [37] &quot;SeuratObject&quot; &quot;sp&quot; &quot;rtracklayer&quot; &quot;GenomicRanges&quot; ## [41] &quot;GenomeInfoDb&quot; &quot;IRanges&quot; &quot;S4Vectors&quot; &quot;BiocGenerics&quot; ## [45] &quot;stats4&quot; &quot;stats&quot; &quot;graphics&quot; &quot;grDevices&quot; ## [49] &quot;utils&quot; &quot;datasets&quot; &quot;methods&quot; &quot;base&quot; ## ## [[3]] ## [1] &quot;HGNChelper&quot; &quot;data.tree&quot; &quot;igraph&quot; &quot;ggraph&quot; ## [5] &quot;ROCR&quot; &quot;KernSmooth&quot; &quot;parallel&quot; &quot;fields&quot; ## [9] &quot;viridisLite&quot; &quot;spam&quot; &quot;lubridate&quot; &quot;forcats&quot; ## [13] &quot;dplyr&quot; &quot;purrr&quot; &quot;readr&quot; &quot;tidyr&quot; ## [17] &quot;tibble&quot; &quot;ggplot2&quot; &quot;tidyverse&quot; &quot;patchwork&quot; ## [21] &quot;grid&quot; &quot;cowplot&quot; &quot;stringr&quot; &quot;DoubletFinder&quot; ## [25] &quot;celda&quot; &quot;Matrix&quot; &quot;BiocParallel&quot; &quot;data.table&quot; ## [29] &quot;gridExtra&quot; &quot;DropletUtils&quot; &quot;SingleCellExperiment&quot; &quot;SummarizedExperiment&quot; ## [33] &quot;Biobase&quot; &quot;MatrixGenerics&quot; &quot;matrixStats&quot; &quot;Seurat&quot; ## [37] &quot;SeuratObject&quot; &quot;sp&quot; &quot;rtracklayer&quot; &quot;GenomicRanges&quot; ## [41] &quot;GenomeInfoDb&quot; &quot;IRanges&quot; &quot;S4Vectors&quot; &quot;BiocGenerics&quot; ## [45] &quot;stats4&quot; &quot;stats&quot; &quot;graphics&quot; &quot;grDevices&quot; ## [49] &quot;utils&quot; &quot;datasets&quot; &quot;methods&quot; &quot;base&quot; ## ## [[4]] ## [1] &quot;HGNChelper&quot; &quot;data.tree&quot; &quot;igraph&quot; &quot;ggraph&quot; ## [5] &quot;ROCR&quot; &quot;KernSmooth&quot; &quot;parallel&quot; &quot;fields&quot; ## [9] &quot;viridisLite&quot; &quot;spam&quot; &quot;lubridate&quot; &quot;forcats&quot; ## [13] &quot;dplyr&quot; &quot;purrr&quot; &quot;readr&quot; &quot;tidyr&quot; ## [17] &quot;tibble&quot; &quot;ggplot2&quot; &quot;tidyverse&quot; &quot;patchwork&quot; ## [21] &quot;grid&quot; &quot;cowplot&quot; &quot;stringr&quot; &quot;DoubletFinder&quot; ## [25] &quot;celda&quot; &quot;Matrix&quot; &quot;BiocParallel&quot; &quot;data.table&quot; ## [29] &quot;gridExtra&quot; &quot;DropletUtils&quot; &quot;SingleCellExperiment&quot; &quot;SummarizedExperiment&quot; ## [33] &quot;Biobase&quot; &quot;MatrixGenerics&quot; &quot;matrixStats&quot; &quot;Seurat&quot; ## [37] &quot;SeuratObject&quot; &quot;sp&quot; &quot;rtracklayer&quot; &quot;GenomicRanges&quot; ## [41] &quot;GenomeInfoDb&quot; &quot;IRanges&quot; &quot;S4Vectors&quot; &quot;BiocGenerics&quot; ## [45] &quot;stats4&quot; &quot;stats&quot; &quot;graphics&quot; &quot;grDevices&quot; ## [49] &quot;utils&quot; &quot;datasets&quot; &quot;methods&quot; &quot;base&quot; lapply(c(&quot;dplyr&quot;,&quot;Seurat&quot;,&quot;HGNChelper&quot;), library, character.only = T) ## [[1]] ## [1] &quot;HGNChelper&quot; &quot;data.tree&quot; &quot;igraph&quot; &quot;ggraph&quot; ## [5] &quot;ROCR&quot; &quot;KernSmooth&quot; &quot;parallel&quot; &quot;fields&quot; ## [9] &quot;viridisLite&quot; &quot;spam&quot; &quot;lubridate&quot; &quot;forcats&quot; ## [13] &quot;dplyr&quot; &quot;purrr&quot; &quot;readr&quot; &quot;tidyr&quot; ## [17] &quot;tibble&quot; &quot;ggplot2&quot; &quot;tidyverse&quot; &quot;patchwork&quot; ## [21] &quot;grid&quot; &quot;cowplot&quot; &quot;stringr&quot; &quot;DoubletFinder&quot; ## [25] &quot;celda&quot; &quot;Matrix&quot; &quot;BiocParallel&quot; &quot;data.table&quot; ## [29] &quot;gridExtra&quot; &quot;DropletUtils&quot; &quot;SingleCellExperiment&quot; &quot;SummarizedExperiment&quot; ## [33] &quot;Biobase&quot; &quot;MatrixGenerics&quot; &quot;matrixStats&quot; &quot;Seurat&quot; ## [37] &quot;SeuratObject&quot; &quot;sp&quot; &quot;rtracklayer&quot; &quot;GenomicRanges&quot; ## [41] &quot;GenomeInfoDb&quot; &quot;IRanges&quot; &quot;S4Vectors&quot; &quot;BiocGenerics&quot; ## [45] &quot;stats4&quot; &quot;stats&quot; &quot;graphics&quot; &quot;grDevices&quot; ## [49] &quot;utils&quot; &quot;datasets&quot; &quot;methods&quot; &quot;base&quot; ## ## [[2]] ## [1] &quot;HGNChelper&quot; &quot;data.tree&quot; &quot;igraph&quot; &quot;ggraph&quot; ## [5] &quot;ROCR&quot; &quot;KernSmooth&quot; &quot;parallel&quot; &quot;fields&quot; ## [9] &quot;viridisLite&quot; &quot;spam&quot; &quot;lubridate&quot; &quot;forcats&quot; ## [13] &quot;dplyr&quot; &quot;purrr&quot; &quot;readr&quot; &quot;tidyr&quot; ## [17] &quot;tibble&quot; &quot;ggplot2&quot; &quot;tidyverse&quot; &quot;patchwork&quot; ## [21] &quot;grid&quot; &quot;cowplot&quot; &quot;stringr&quot; &quot;DoubletFinder&quot; ## [25] &quot;celda&quot; &quot;Matrix&quot; &quot;BiocParallel&quot; &quot;data.table&quot; ## [29] &quot;gridExtra&quot; &quot;DropletUtils&quot; &quot;SingleCellExperiment&quot; &quot;SummarizedExperiment&quot; ## [33] &quot;Biobase&quot; &quot;MatrixGenerics&quot; &quot;matrixStats&quot; &quot;Seurat&quot; ## [37] &quot;SeuratObject&quot; &quot;sp&quot; &quot;rtracklayer&quot; &quot;GenomicRanges&quot; ## [41] &quot;GenomeInfoDb&quot; &quot;IRanges&quot; &quot;S4Vectors&quot; &quot;BiocGenerics&quot; ## [45] &quot;stats4&quot; &quot;stats&quot; &quot;graphics&quot; &quot;grDevices&quot; ## [49] &quot;utils&quot; &quot;datasets&quot; &quot;methods&quot; &quot;base&quot; ## ## [[3]] ## [1] &quot;HGNChelper&quot; &quot;data.tree&quot; &quot;igraph&quot; &quot;ggraph&quot; ## [5] &quot;ROCR&quot; &quot;KernSmooth&quot; &quot;parallel&quot; &quot;fields&quot; ## [9] &quot;viridisLite&quot; &quot;spam&quot; &quot;lubridate&quot; &quot;forcats&quot; ## [13] &quot;dplyr&quot; &quot;purrr&quot; &quot;readr&quot; &quot;tidyr&quot; ## [17] &quot;tibble&quot; &quot;ggplot2&quot; &quot;tidyverse&quot; &quot;patchwork&quot; ## [21] &quot;grid&quot; &quot;cowplot&quot; &quot;stringr&quot; &quot;DoubletFinder&quot; ## [25] &quot;celda&quot; &quot;Matrix&quot; &quot;BiocParallel&quot; &quot;data.table&quot; ## [29] &quot;gridExtra&quot; &quot;DropletUtils&quot; &quot;SingleCellExperiment&quot; &quot;SummarizedExperiment&quot; ## [33] &quot;Biobase&quot; &quot;MatrixGenerics&quot; &quot;matrixStats&quot; &quot;Seurat&quot; ## [37] &quot;SeuratObject&quot; &quot;sp&quot; &quot;rtracklayer&quot; &quot;GenomicRanges&quot; ## [41] &quot;GenomeInfoDb&quot; &quot;IRanges&quot; &quot;S4Vectors&quot; &quot;BiocGenerics&quot; ## [45] &quot;stats4&quot; &quot;stats&quot; &quot;graphics&quot; &quot;grDevices&quot; ## [49] &quot;utils&quot; &quot;datasets&quot; &quot;methods&quot; &quot;base&quot; # load gene set preparation function source(&quot;https://raw.githubusercontent.com/IanevskiAleksandr/sc-type/master/R/gene_sets_prepare.R&quot;) # load cell type annotation function source(&quot;https://raw.githubusercontent.com/IanevskiAleksandr/sc-type/master/R/sctype_score_.R&quot;) #### # define functions perform_sctype_analysis &lt;- function(seurat_obj, db_, tissue, gs_removal_list = c(), metadat_col_prefix = &quot;db_prefix&quot;, figure_prefix =&quot;fig_name&quot; , cluster_res = &quot;RNA_snn_res.0.9&quot;, output_file = &quot;&quot;) { # Prepare gene sets gs_list &lt;- gene_sets_prepare(db_, tissue) # Remove specified gene sets for (gs in gs_removal_list) { gs_list[[&quot;gs_positive&quot;]][[gs]] &lt;- NULL } # Calculate sctype scores es.max &lt;- sctype_score(scRNAseqData = seurat_obj@assays$RNA$scale.data, scaled = TRUE, gs = gs_list$gs_positive, gs2 = gs_list$gs_negative) # Set identities in Seurat object Idents(seurat_obj) &lt;- cluster_res # Merge by cluster cL_results &lt;- do.call(&quot;rbind&quot;, lapply(unique(seurat_obj@meta.data[[cluster_res]]), function(cl) { es.max.cl &lt;- sort(rowSums(es.max[, rownames(seurat_obj@meta.data[seurat_obj@meta.data[[cluster_res]] == cl, ])]), decreasing = TRUE) head(data.frame(cluster = cl, type = names(es.max.cl), scores = es.max.cl, ncells = sum(seurat_obj@meta.data[[cluster_res]] == cl)), 10) })) sctype_scores &lt;- cL_results %&gt;% group_by(cluster) %&gt;% top_n(n = 1, wt = scores) # Set low-confident clusters to &quot;Unknown&quot; sctype_scores$scores &lt;- as.numeric(sctype_scores$scores) sctype_scores$type[sctype_scores$scores &lt; sctype_scores$ncells / 4] &lt;- &quot;Unknown&quot; print(sctype_scores[, 1:3]) # Overlay the labels seurat_obj@meta.data[[metadat_col_prefix]] &lt;- &quot;&quot; for (j in unique(sctype_scores$cluster)) { cl_type &lt;- sctype_scores[sctype_scores$cluster == j,] seurat_obj@meta.data[[metadat_col_prefix]][seurat_obj@meta.data[[cluster_res]] == j] &lt;- as.character(cl_type$type[1]) } # Plotting pclass &lt;- DimPlot(seurat_obj, reduction = &quot;umap&quot;, label = TRUE, repel = TRUE, group.by = metadat_col_prefix) print(pclass) # Save the plot to a PDF pdf(file = paste0(figure_prefix, &quot;_&quot;, metadat_col_prefix, &quot;_sctype_genes.pdf&quot;), width = 8, height = 8) print(pclass + ggtitle(figure_prefix)) dev.off() # Save the updated Seurat object to an RDS file if (output_file != &quot;&quot;) { saveRDS(seurat_obj, file = paste0(output_file, &quot;.rds&quot;)) } # Return the updated Seurat object return(seurat_obj) } # Define variables db_ = &quot;https://raw.githubusercontent.com/IanevskiAleksandr/sc-type/master/ScTypeDB_full.xlsx&quot;; # this is a defualt databse from sctype tissue &lt;- &quot;Brain&quot; gs_removal_list &lt;- c(&quot;Tanycytes&quot;) seu_obj &lt;- perform_sctype_analysis(seu_obj, db_, tissue, gs_removal_list, metadat_col_prefix =&quot;sctype_db&quot;, figure_prefix = &quot;Day_55&quot;, output_file = &quot;Day_55&quot;, cluster_res = &quot;RNA_snn_res.0.9&quot;) ## # A tibble: 8 × 3 ## # Groups: cluster [8] ## cluster type scores ## &lt;fct&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 2 Immature neurons 81.3 ## 2 7 Myelinating Schwann cells 7.18 ## 3 0 Mature neurons 108. ## 4 6 Mature neurons 37.4 ## 5 3 Radial glial cells 85.1 ## 6 4 GABAergic neurons 82.8 ## 7 5 Radial glial cells 92.0 ## 8 1 Radial glial cells 94.0 Sctype gives us some indication of which cell types we have in our data. We can use the DE genes to get some more info FeaturePlot(s_object, features = c(&quot;GAD1&quot;, &quot;VIM&quot;, &quot;TBR1&quot;, &quot;SLC17A7&quot;)) 5.3 plotting trajectories 5.4 5.5 Finding isofrms of interest 5.6 5.7 plotting with ditoplot "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
