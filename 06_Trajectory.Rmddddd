---
title: "Trajectory"
author: "Sefi"
date: "`r Sys.Date()`"
output: html_document
---

```{r setup traj, include=FALSE}
# Load required libraries
library(monocle3)
library(SeuratWrappers)
library(ggplot2)
library(tidyverse)
library(Seurat)

```


```{r traj, include=FALSE}
perform_trajectory_analysis <- function(seurat_obj, assay, prefix, root_cells = NULL, cores = 8) {
  
  # Step 1: Subset and Remove RNA Assay
  DefaultAssay(seurat_obj) <- assay
  seurat_obj <- JoinLayers(seurat_obj)
  
  # Step 2: Convert to Monocle cell_data_set object
  cds <- as.cell_data_set(seurat_obj)
  
  # Add gene_short_name to feature data (gene metadata)
  fData(cds)$gene_short_name <- rownames(fData(cds))
  
  # Estimate size factors
  cds <- estimate_size_factors(cds)
  
  # Step 3: Assign cluster info and UMAP coordinates
  # Partitions
  recreate_partition <- as.factor(rep(1, length(colnames(seurat_obj))))
  names(recreate_partition) <- colnames(seurat_obj)
  cds@clusters$UMAP$partitions <- recreate_partition
  
  # Clustering information from Seurat
  cds@clusters$UMAP$clusters <- seurat_obj@meta.data[["orig.ident"]]
  
  # UMAP embeddings from Seurat
  cds@int_colData@listData$reducedDims$UMAP <- seurat_obj@reductions$umap.harm@cell.embeddings
  
  # Plot before trajectory
  cluster_before_trajectory <- plot_cells(cds, color_cells_by = 'orig.ident') +
    theme(legend.position = "right")
  
  # Save plot
  pdf(file = paste0(prefix, "_cluster_before_trajectory.pdf"), width = 6, height = 6)
  print(cluster_before_trajectory)
  dev.off()
  
  # Step 4: Learn trajectory graph
  cds <- learn_graph(cds, use_partition = FALSE, close_loop = FALSE)
  
  # Plot learned trajectory
  plot_trajectory <- plot_cells(cds, color_cells_by = 'cluster_annotations') +
    theme(legend.position = "right")
  
  pdf(file = paste0(prefix, "_trajectory_plot.pdf"), width = 6, height = 6)
  print(plot_trajectory)
  dev.off()
  
  # Step 5: Order cells in pseudotime
  cds <- order_cells(cds, reduction_method = 'UMAP', root_cells = root_cells)
  
  # Plot pseudotime
  p_pseudotime <- plot_cells(cds, color_cells_by = 'pseudotime') +
    theme(legend.position = "right")
  
  pdf(file = paste0(prefix, "_pseudotime_plot.pdf"), width = 6, height = 6)
  print(p_pseudotime)
  dev.off()
  
  # Save pseudotime to Seurat object
  seurat_obj$pseudotime <- pseudotime(cds)
  
  # Step 6: Finding genes that change as a function of pseudotime
  deg_results <- graph_test(cds, neighbor_graph = 'principal_graph', cores = cores)
  
  # Filter for significant genes
  MI_sig <- deg_results %>%
    filter(q_value < 0.01, morans_I > 0.5, status == 'OK') %>%
    arrange(q_value)
  
  # Save significant genes
  write.csv(MI_sig, paste0(prefix, "_sig_genes_pseudotime.csv"))
  
  # Plot top genes
  top_genes <- MI_sig %>% 
    arrange(desc(morans_I)) %>% 
    head(16)
  
  pdf(file = paste0(prefix, "_top_genes_pseudotime.pdf"), width = 10, height = 10)
  print(FeaturePlot(seurat_obj, features = top_genes$gene_short_name, reduction ="umap.harm"))
  dev.off()
  
  
  ##### plot pseduotime
  ####plot genes based on pseudo time expresstion 
  my_genes <- row.names(subset(fData(cds), gene_short_name %in% top_genes$gene_short_name)) 
  #my_genes <- row.names(subset(fData(cds), gene_short_name %in% c("DLK1","GRIA2","GRIN2B", "VIM", "PKM", "GAD1", "DCX", "POU5F1", "HOPX"))) 
  
  cds_subset <- cds[my_genes,]
  
  monocle_plot <- monocle3::plot_genes_in_pseudotime(cds_subset = cds_subset, min_expr = 0.5, cell_size = 0.25,
                                     nrow = NULL, ncol = 1, panel_order = NULL,
                                     label_by_short_name = TRUE, color_cells_by = "cluster_annotations")
  
  pdf(file = paste0(prefix, "monocle_top_genes_pseudotime.pdf"), width = 10, height = 10)
  print(monocle_plot)
  dev.off()
  
  
  # Save the Seurat object with pseudotime info
  saveRDS(seurat_obj, file = paste0(prefix, "_seurat_with_pseudotime.rds"))
}



perform_trajectory_analysis(seurat_obj = six_month_seurat.intergrated_harm.isofrom, "RNA", prefix = "six", root_cells = NULL, cores = 8)
perform_trajectory_analysis(seurat_obj = six_month_seurat.intergrated_harm.isofrom, "iso", prefix = "six_iso", root_cells = NULL, cores = 8)





```

## R Markdown

This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.

When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:

```{r cars}
summary(cars)
```

## Including Plots

You can also embed plots, for example:

```{r pressure, echo=FALSE}
plot(pressure)
```

Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
